{"ast":null,"code":"import _slicedToArray from \"/home/gauravpendherkar/Desktop/projects/library/sample-library/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gauravpendherkar/Desktop/projects/library/sample-library/example/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport ExampleComponent from 'sample-library';\nimport 'sample-library/dist/index.css';\n\nconst App = () => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        completed = _useState2[0],\n        setCompleted = _useState2[1];\n\n  useEffect(() => {\n    setInterval(() => setCompleted(Math.floor(Math.random() * 100) + 1), 2000);\n  }, []);\n  return /*#__PURE__*/React.createElement(ExampleComponent, {\n    bgcolor: '#6a1b9a',\n    completed: completed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default App;","map":{"version":3,"sources":["/home/gauravpendherkar/Desktop/projects/library/sample-library/example/src/App.js"],"names":["React","useState","useEffect","ExampleComponent","App","completed","setCompleted","setInterval","Math","floor","random"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,gBAAP,MAA6B,gBAA7B;AACA,OAAO,+BAAP;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA,oBACkBH,QAAQ,CAAC,CAAD,CAD1B;AAAA;AAAA,QACTI,SADS;AAAA,QACEC,YADF;;AAGhBJ,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,WAAW,CAAC,MAAMD,YAAY,CAACE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,IAAkC,CAAnC,CAAnB,EAA0D,IAA1D,CAAX;AACD,GAFQ,EAEN,EAFM,CAAT;AAGA,sBAAO,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE,SAA3B;AAAsC,IAAA,SAAS,EAAEL,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAPD;;AASA,eAAeD,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport ExampleComponent from 'sample-library'\nimport 'sample-library/dist/index.css'\n\nconst App = () => {\n  const [completed, setCompleted] = useState(0)\n\n  useEffect(() => {\n    setInterval(() => setCompleted(Math.floor(Math.random() * 100) + 1), 2000)\n  }, [])\n  return <ExampleComponent bgcolor={'#6a1b9a'} completed={completed} />\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}